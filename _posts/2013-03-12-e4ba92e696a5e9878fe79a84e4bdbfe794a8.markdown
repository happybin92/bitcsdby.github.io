---
author: bydiao
comments: true
date: 2013-03-12 13:06:00+00:00
layout: post
slug: '%e4%ba%92%e6%96%a5%e9%87%8f%e7%9a%84%e4%bd%bf%e7%94%a8'
title: 互斥量的使用
wordpress_id: 204
categories:
- .NET&amp;Windows编程
tags:
- .net framework
- 窗口通信
---

.Net下的Mutex类可以实现互斥量的创建，命名，释放等一些列操作。
系统中不会存在名字相同的互斥量。同一个名字的互斥量可以对应多个mutex实例，及有多个句柄。他们之间可以实现互斥关系。

今天要实现一个功能，两个程序A,B,点击B上的一个按键，判断如果A已经启动，则不执行功能并提示用户，关闭A,再点击B的按钮，就可以执行功能代码。

具体实现如下，A中定义一个互斥量MA,B点击按键的时候，创建一个名字为"MA"的互斥量，如果失败（说明A已经开启），则顺序执行并提示用户。

这种方法看似可以实现上述功能。但存在问题，那就关闭A后，再次点击B的按钮，仍然提示MA已经存在。

分析后，我认为是执行以下代码后
[csharp]
mutex = Mutex(true,"MA",out rel);
[/csharp]
如果"MA"已经存在，rel会是false，但mutex并不是null，而是有一个句柄值的。这就说明，虽然创建"MA"失败，但系统将mutex指向了"MA"互斥量。此时就有两个句柄同时指向了"MA"，那么关闭A之后，只是释放了A中的句柄，"MA"互斥量仍然没有释放，所以再次点击B的按钮，会提示MA已经存在。

解决方法就是，在B中，无论创建成功还是失败，都调用以下代码，释放资源。这样无论"MA"存在还是不存在，跑完B的函数，系统都不会有一个"MA"的互斥量。
[csharp]
mutex.Close();
[/csharp]
