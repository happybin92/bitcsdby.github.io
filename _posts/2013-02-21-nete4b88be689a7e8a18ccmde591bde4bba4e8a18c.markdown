---
author: bydiao
comments: true
date: 2013-02-21 13:48:31+00:00
layout: post
slug: net%e4%b8%8b%e6%89%a7%e8%a1%8ccmd%e5%91%bd%e4%bb%a4%e8%a1%8c
title: .Net下执行cmd命令行
wordpress_id: 93
tags: [Windows编程&.NET]

---

借助cmd命令行，可以在windows平台下实现很多后台功能。本次用到cmd，主要想实现在wpf程序中，启动IAR工程。
在.Net程序中调用cmd，主要用到System.Diagnostics.Process类。

以下代码可以声明和配置一个Process对象，如果仅用cmd启动其他程序，则不需要控制台，用标准输入输出接口即可。
<code lang="csharp">
	Process p = new Process();//定义对象
	p.StartInfo.FileName = "cmd.exe";//指向可执行文件
	p.StartInfo.UseShellExecute = false;//不需要控制台
	p.StartInfo.RedirectStandardInput = true;
	p.StartInfo.RedirectStandardOutput = true;
	p.StartInfo.RedirectStandardError = true;//需要用到标准的输入输出和错误提示
	p.StartInfo.CreateNoWindow = true;//不需要创建窗口
</code>

配置好一个Process对象后，通过Start方法启动Process，并通过标准输入输出进行命令行操作。
<code lang="csharp">
	p.Start();//启动Process
	p.StandardInput.WriteLine("devenv.exe  project/p1/ConsoleApplication1.sln /Rebuild \"Debug|x86\" /out a.txt"); 
	//该命令行执行的操作时用vs2010启动并编译一个工程，将错误信息输出到a.txt中。
	p.StandardInput.WriteLine("exit");//退出cmd
	string str = p.StandardOutput.ReadToEnd();//将cmd的标准输出输出到字符串str上
	p.WaitForExit();//等待cmd执行完成。
	p.Close();//关闭Process
</code>

这样就可以实现cmd启动一个vs工程。IAR应该会有类似的命令行，还需要与林伟师兄讨论。
今天还有额外收获，vs2010也支持命令行操作，而且相当简单易行，不需要启动庞大的IDE。日后有时间要好好研究一下。
现在只知道最简单的编译命令，如下

<code lang="csharp">
	/*需要实现将xxx\vs2010\Common7\IDE加入系统环境变量PATH*/
	/*以下命令行的含义为，bulid xxx 解决方案，编译配置为Debug|x86 并将错误信息输出到a.txt文件*/
	devenv.exe xxx.sln /build \"Debug|x86\" /out a.txt"
</code>
