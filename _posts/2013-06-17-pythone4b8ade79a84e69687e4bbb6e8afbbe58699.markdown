---
author: bydiao
comments: true
date: 2013-06-17 14:27:16+00:00
layout: post
slug: python%e4%b8%ad%e7%9a%84%e6%96%87%e4%bb%b6%e8%af%bb%e5%86%99
title: python中的文件读写
wordpress_id: 386
categories:
- Python
---

python是一门便捷的语言，文件读写自然也是操作简单。下面列出一些主要的文件读写操作，主要来自headfirst的第三章和第四章。

打开一个文件

[code lang="python"]
try:
    fp = open("a.txt","wb")
    """文件操作"""
except IOError as err:
    print str(err)
except ValueError as err:
    print str(err)
finally:
    if 'fp' in locals():
        fp.close()
[/code]

以上代码很健壮，考虑了文件读写可能发生的IO异常，值异常等，并且最终会关闭文件。以上是按正常文件操作思路写出的代码，但python有一种更好的处理方法，可以自动处理并关闭文件，具体如下：
[code lang="python"]
try:
    with open("a.txt","wb") as fp:
        """文件操作"""
except IOError err:
    print str(err)
[/code]

这样就实现了以上稍显复杂的try——except——finally结构。with关键字，体现了python的便捷性。

同时，python为了读写方便，设计了独有的编码协议，可以直接读写指定数据结构，主要用到了pickle模块。
例如以下代码实现了列表的读写

[code lang="python"]
import pickle
try:
    with open("a.txt","wb") as fp:
        pickle.dump([1,2,3],fp)
except IOError as err:
    print str(err)
[/code]

当然，读取的时候，也可以直接用文件内容对数据类型进行赋值。
[code lang="python"]
import pickle
try:
    with open("a.txt","rb") as fp:
        l = pickle.load(fp);
except IOError as err:
    print str(err)
[/code]
