---
author: bydiao
comments: true
date: 2013-08-28 12:22:15+00:00
layout: post
slug: c%e8%af%ad%e8%a8%80%e8%84%91%e7%ad%8b%e6%80%a5%e8%bd%ac%e5%bc%af
title: C语言脑筋急转弯
wordpress_id: 417
categories:
- C++&amp;STL
tags:
- C++
---

今天和先斌讨论了一道C语言的编程题，
一段代码，输出hello，删除第一个字符，输出world
一段代码，输出hello，删除最后一个字符，输出world

看到此题的有两个思路，用宏定义和注释来弄。

注释有 // 和 /*，想来要用注释来分隔选择代码的话，至少要删除两个字符。显然自己太天真了，第一题正是用注释来弄
可以这样写注释，删除第一个字符的话就大不一样了
[code lang="c"]
//*
[/code]

第一题答案如下(以下显示是插件的bug，大家可以到vc下自行实验)
[code lang="c"]
//*
main(puts("hello");}
/*/
main{puts("world");}
//*/
[/code]
删掉一个字符效果如下
[code lang="c"]
/*
main(puts("hello");}
/*/
main{puts("world");}
//*/
[/code]
第一题搞定。

看第二题，注释的手段用过了，宏定义自然也要派上用场

煞费苦心也没想出来，看了高人的代码，还是没看懂，答案如下
[code lang="c"]
#ifndef D2
#define D2
#define D
#include __FILE__
#ifdef D
int main(){puts("hello!");return 0;}
#else
int main(){puts("world!");return 0;}
#endif
#endif
#undef D2
[/code]

这里还是要说一下宏定义的那点事，生成目标文件，要经过预编译，编译，汇编和链接四个过程，其中预编译做了四件事，宏定义替换，去掉注释，插入include文件，保留#programm编译指令，也就是说宏替换是在预编译过程中做的，和编译没关系。

再看以上的代码，其实最大的玄机还不在于宏定义，宏定义很简单，一看就懂，最大的玄机在
[code lang="c"]
#include __FILE__
[/code]
__FILE__是C语言默认的一个全局变量，指示了当前代码源文件的路径，因此 #include __FILE__，就是把源文件代码缘分不动的插入一遍，插入之后，简单一分析，就明白了。

活学活用，C语言魅力无穷。
